function setPosition(a, b)
{
	object.position.x = a * 10 - 125; //multiple of 100+j value? to center
	object.position.z = b * 10 - 125; //multiple of 100+i value? to center
}

var group = new THREE.Group();
this.add( group );
var plane = this.getObjectByName( 'Land' );
//var colors = [0x212121, 0x424242, 0x616161, 0x757575, 0x9e9e9e, 0xbdbdbd, 0xe0e0e0, 0xeeeeee, 0xf5f5f5, 0xfafafa];
var colors = [0x000033, 0x003366, 0x006699, 0xFFFF99, 0x996633, 0x336633, 0x006600, 0x003300, 0x808080, 0xffffff];
for ( var j = 0; j < 25; j ++ ) //z
{
	for ( var i = 0; i < 25; i ++ ) //x
	{
		var num = Math.floor(Math.random()*10); //random num 0-9
		var newmaterial = new THREE.MeshPhongMaterial({color: colors[num]}); //assign color to material
		plane.material = newmaterial; //apply material to object
		var object = plane.clone();
		setPosition(j, i);
		object.position.y = num; //assign height to 10*position in array
		object.scale.y *= 10; //assign height to 10*position in array
		var x = num-1;
		while(x > 0)
		{
			var step = object.clone();
			var gradient = new THREE.MeshPhongMaterial({color: colors[x]});
			step.material = gradient;
			step.scale.x /= x/5;
			step.scale.z /= x/5;
			step.position.y = x;
			x--;
			group.add( step );
		}
		object.scale.x /= num/5;
		object.scale.z /= num/5;
		group.add( object );
		x = num-1;
	}
}
//make initial plane invisible
plane.visible = false;
plane.material.visible = false;